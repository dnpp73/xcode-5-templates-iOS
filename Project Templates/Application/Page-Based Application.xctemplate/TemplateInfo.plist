<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Ancestors</key>
	<array>
		<string>com.apple.dt.unit.cocoaTouchApplication</string>
	</array>
	<key>Concrete</key>
	<true/>
	<key>Definitions</key>
	<dict>
		<key>*:implementation:initSection:initViewController</key>
		<dict>
			<key>Beginning</key>
			<string>- (void)awakeFromNib
		{</string>
			<key>End</key>
			<string>    [super awakeFromNib];
		}
		</string>
			<key>Indent</key>
			<integer>1</integer>
		</dict>
		<key>___VARIABLE_classPrefix:identifier___AppDelegate.m:applicationdidFinishLaunchingWithOptions</key>
		<dict>
			<key>Beginning</key>
			<string>- (BOOL)application:(UIApplication*)application didFinishLaunchingWithOptions:(NSDictionary*)launchOptions
{</string>
			<key>End</key>
			<string>    return YES;
}
</string>
			<key>Indent</key>
			<integer>1</integer>
		</dict>
		<key>___VARIABLE_classPrefix:identifier___DataViewController.h:ivars</key>
		<string>@interface ___VARIABLE_classPrefix:identifier___DataViewController : UIViewController
</string>
		<key>___VARIABLE_classPrefix:identifier___DataViewController.h:methods:dataLabel</key>
		<string>@property (strong, nonatomic) IBOutlet UILabel* dataLabel;</string>
		<key>___VARIABLE_classPrefix:identifier___DataViewController.h:methods:dataObject</key>
		<string>@property (strong, nonatomic) id dataObject;
</string>
		<key>___VARIABLE_classPrefix:identifier___DataViewController.m:implementation:viewWillAppear</key>
		<string>- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    self.dataLabel.text = [self.dataObject description];
}
</string>
		<key>___VARIABLE_classPrefix:identifier___DataViewController.m:private</key>
		<string>@interface ___VARIABLE_classPrefix:identifier___DataViewController ()

@end
</string>
		<key>___VARIABLE_classPrefix:identifier___ModelController.h:ivars</key>
		<string>@interface ___VARIABLE_classPrefix:identifier___ModelController : NSObject &lt;UIPageViewControllerDataSource&gt;
</string>
		<key>___VARIABLE_classPrefix:identifier___ModelController.h:methods:indexOfViewController</key>
		<string>- (NSUInteger)indexOfViewController:(___VARIABLE_classPrefix:identifier___DataViewController *)viewController;
</string>
		<key>___VARIABLE_classPrefix:identifier___ModelController.h:methods:viewControllerAtIndex</key>
		<string>- (___VARIABLE_classPrefix:identifier___DataViewController *)viewControllerAtIndex:(NSUInteger)index storyboard:(UIStoryboard*)storyboard;</string>
		<key>___VARIABLE_classPrefix:identifier___ModelController.m:implementation:indexOfViewController</key>
		<string>- (NSUInteger)indexOfViewController:(___VARIABLE_classPrefix:identifier___DataViewController *)viewController
{   
    return [self.pageData indexOfObject:viewController.dataObject];
}
</string>
		<key>___VARIABLE_classPrefix:identifier___ModelController.m:implementation:init:setup</key>
		<string>NSDateFormatter* dateFormatter = [[NSDateFormatter alloc] init];
_pageData = [[dateFormatter monthSymbols] copy];</string>
		<key>___VARIABLE_classPrefix:identifier___ModelController.m:implementation:pageViewControllerDataSource</key>
		<string>#pragma mark - Page View Controller Data Source

- (UIViewController*)pageViewController:(UIPageViewController*)pageViewController viewControllerBeforeViewController:(UIViewController*)viewController
{
    NSUInteger index = [self indexOfViewController:(___VARIABLE_classPrefix:identifier___DataViewController *)viewController];
    if ((index == 0) || (index == NSNotFound)) {
        return nil;
    }
    
    index--;
    return [self viewControllerAtIndex:index storyboard:viewController.storyboard];
}

- (UIViewController*)pageViewController:(UIPageViewController*)pageViewController viewControllerAfterViewController:(UIViewController*)viewController
{
    NSUInteger index = [self indexOfViewController:(___VARIABLE_classPrefix:identifier___DataViewController*)viewController];
    if (index == NSNotFound) {
        return nil;
    }
    
    index++;
    if (index == [self.pageData count]) {
        return nil;
    }
    return [self viewControllerAtIndex:index storyboard:viewController.storyboard];
}
</string>
		<key>___VARIABLE_classPrefix:identifier___ModelController.m:implementation:viewControllerAtIndex</key>
		<string>- (___VARIABLE_classPrefix:identifier___DataViewController*)viewControllerAtIndex:(NSUInteger)index storyboard:(UIStoryboard*)storyboard
{   
    if (([self.pageData count] == 0) || (index &gt;= [self.pageData count])) {
        return nil;
    }
    
    ___VARIABLE_classPrefix:identifier___DataViewController *dataViewController = [storyboard instantiateViewControllerWithIdentifier:@"___VARIABLE_classPrefix:identifier___DataViewController"];
    dataViewController.dataObject = self.pageData[index];
    return dataViewController;
}
</string>
		<key>___VARIABLE_classPrefix:identifier___ModelController.m:private</key>
		<string>@interface ___VARIABLE_classPrefix:identifier___ModelController()
@property (readonly, strong, nonatomic) NSArray* pageData;
@end
</string>
		<key>___VARIABLE_classPrefix:identifier___RootViewController.h:ivars</key>
		<string>@interface ___VARIABLE_classPrefix:identifier___RootViewController : UIViewController &lt;UIPageViewControllerDelegate&gt;
</string>
		<key>___VARIABLE_classPrefix:identifier___RootViewController.h:methods:pageViewController</key>
		<string>@property (strong, nonatomic) UIPageViewController* pageViewController;
</string>
		<key>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:UIPageViewController</key>
		<dict>
			<key>Beginning</key>
			<string>- (___VARIABLE_classPrefix:identifier___ModelController *)modelController
{
    if (!_modelController) {
        _modelController = [[___VARIABLE_classPrefix:identifier___ModelController alloc] init];
    }
    return _modelController;
}

#pragma mark - UIPageViewController delegate methods

/*
- (void)pageViewController:(UIPageViewController*)pageViewController didFinishAnimating:(BOOL)finished previousViewControllers:(NSArray*)previousViewControllers transitionCompleted:(BOOL)completed
{
    
}
 */

- (UIPageViewControllerSpineLocation)pageViewController:(UIPageViewController*)pageViewController spineLocationForInterfaceOrientation:(UIInterfaceOrientation)orientation
{</string>
			<key>End</key>
			<string>}
</string>
			<key>Indent</key>
			<integer>1</integer>
		</dict>
		<key>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:viewDidLoad:setup</key>
		<dict>
			<key>Beginning</key>
			<string>self.pageViewController = [[UIPageViewController alloc] initWithTransitionStyle:UIPageViewControllerTransitionStylePageCurl navigationOrientation:UIPageViewControllerNavigationOrientationHorizontal options:nil];
self.pageViewController.delegate = self;

___VARIABLE_classPrefix:identifier___DataViewController *startingViewController = [self.modelController viewControllerAtIndex:0 storyboard:self.storyboard];
NSArray* viewControllers = @[startingViewController];
[self.pageViewController setViewControllers:viewControllers direction:UIPageViewControllerNavigationDirectionForward animated:NO completion:nil];

self.pageViewController.dataSource = self.modelController;

[self addChildViewController:self.pageViewController];
[self.view addSubview:self.pageViewController.view];

CGRect pageViewRect = self.view.bounds;</string>
			<key>End</key>
			<string>self.pageViewController.view.frame = pageViewRect;

[self.pageViewController didMoveToParentViewController:self];

self.view.gestureRecognizers = self.pageViewController.gestureRecognizers;</string>
		</dict>
		<key>___VARIABLE_classPrefix:identifier___RootViewController.m:private</key>
		<string>@interface ___VARIABLE_classPrefix:identifier___RootViewController ()
@property (readonly, strong, nonatomic) ___VARIABLE_classPrefix:identifier___ModelController *modelController;
@end
</string>
	</dict>
	<key>Description</key>
	<string>This template provides a starting point for a page-based application that uses a page view controller. </string>
	<key>Identifier</key>
	<string>com.apple.dt.unit.pageBasedApplication</string>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Nodes</key>
	<array>
		<string>___PACKAGENAME___-Prefix.pch:Availability:iPhoneAvailability:5</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.h:comments</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.h:import:importCocoa</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.h:class</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.h:ivars</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.h:methods:pageViewController</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.m:comments</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.m:import:___VARIABLE_classPrefix:identifier___RootViewController.h</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.m:import:___VARIABLE_classPrefix:identifier___ModelController.h</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.m:import:___VARIABLE_classPrefix:identifier___DataViewController.h</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.m:private</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:synthesize:modelController = _modelController</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:dealloc:_pageViewController</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:dealloc:_modelController</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:viewDidLoad:setup:inset</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:didReceiveMemoryWarning</string>
		<string>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:UIPageViewController:content</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.h:comments</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.h:import:importCocoa</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.h:class</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.h:ivars</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.h:methods:dataLabel</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.h:methods:dataObject</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.m:comments</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.m:import:___VARIABLE_classPrefix:identifier___DataViewController.h</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.m:private</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.m:implementation:dealloc:_dataLabel</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.m:implementation:dealloc:_dataObject</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.m:implementation:viewDidLoad</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.m:implementation:didReceiveMemoryWarning</string>
		<string>___VARIABLE_classPrefix:identifier___DataViewController.m:implementation:viewWillAppear</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.h:comments</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.h:import:importCocoa</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.h:class:___VARIABLE_classPrefix:identifier___DataViewController</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.h:ivars</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.h:methods:viewControllerAtIndex</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.h:methods:indexOfViewController</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.m:comments</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.m:import:___VARIABLE_classPrefix:identifier___ModelController.h</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.m:import:___VARIABLE_classPrefix:identifier___DataViewController.h</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.m:private</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.m:implementation:dealloc:_pageData</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.m:implementation:init:setup</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.m:implementation:viewControllerAtIndex</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.m:implementation:indexOfViewController</string>
		<string>___VARIABLE_classPrefix:identifier___ModelController.m:implementation:pageViewControllerDataSource</string>
	</array>
	<key>Options</key>
	<array>
		<dict>
			<key>Identifier</key>
			<string>universalDeviceFamily</string>
			<key>Units</key>
			<dict>
				<key>Universal</key>
				<dict>
					<key>Definitions</key>
					<dict>
						<key>Base.lproj/Main_iPad.storyboard</key>
						<dict>
							<key>Path</key>
							<string>Main_iPad.storyboard</string>
						</dict>
						<key>Base.lproj/Main_iPhone.storyboard</key>
						<dict>
							<key>Path</key>
							<string>Main_iPhone.storyboard</string>
						</dict>
						<key>___PACKAGENAME___-Info.plist:UIMainStoryboardFile</key>
						<string>&lt;key&gt;UIMainStoryboardFile&lt;/key&gt;
&lt;string&gt;Main_iPhone&lt;/string&gt;
&lt;key&gt;UIMainStoryboardFile~ipad&lt;/key&gt;
&lt;string&gt;Main_iPad&lt;/string&gt;</string>
						<key>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:UIPageViewController:content</key>
						<string>if (UIInterfaceOrientationIsPortrait(orientation) || ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)) {
    UIViewController* currentViewController = self.pageViewController.viewControllers[0];
    NSArray* viewControllers = @[currentViewController];
    [self.pageViewController setViewControllers:viewControllers direction:UIPageViewControllerNavigationDirectionForward animated:YES completion:nil];
    
    self.pageViewController.doubleSided = NO;
    return UIPageViewControllerSpineLocationMin;
}

___VARIABLE_classPrefix:identifier___DataViewController *currentViewController = self.pageViewController.viewControllers[0];
NSArray* viewControllers = nil;

NSUInteger indexOfCurrentViewController = [self.modelController indexOfViewController:currentViewController];
if (indexOfCurrentViewController == 0 || indexOfCurrentViewController % 2 == 0) {
    UIViewController* nextViewController = [self.modelController pageViewController:self.pageViewController viewControllerAfterViewController:currentViewController];
    viewControllers = @[currentViewController, nextViewController];
} else {
    UIViewController* previousViewController = [self.modelController pageViewController:self.pageViewController viewControllerBeforeViewController:currentViewController];
    viewControllers = @[previousViewController, currentViewController];
}
[self.pageViewController setViewControllers:viewControllers direction:UIPageViewControllerNavigationDirectionForward animated:YES completion:nil];


return UIPageViewControllerSpineLocationMid;
</string>
						<key>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:viewDidLoad:setup:inset</key>
						<string>if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad) {
    pageViewRect = CGRectInset(pageViewRect, 40.0, 40.0);
}</string>
					</dict>
					<key>Nodes</key>
					<array>
						<string>___PACKAGENAME___-Info.plist:UIMainStoryboardFile</string>
						<string>Base.lproj/Main_iPhone.storyboard</string>
						<string>Base.lproj/Main_iPad.storyboard</string>
					</array>
				</dict>
				<key>iPad</key>
				<dict>
					<key>Definitions</key>
					<dict>
						<key>Base.lproj/Main.storyboard</key>
						<dict>
							<key>Path</key>
							<string>Main_iPad.storyboard</string>
						</dict>
						<key>___PACKAGENAME___-Info.plist:UIMainStoryboardFile</key>
						<string>&lt;key&gt;UIMainStoryboardFile&lt;/key&gt;
&lt;string&gt;Main&lt;/string&gt;</string>
						<key>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:UIPageViewController:content</key>
						<string>if (UIInterfaceOrientationIsPortrait(orientation)) {
    UIViewController* currentViewController = self.pageViewController.viewControllers[0];
    NSArray* viewControllers = @[currentViewController];
    [self.pageViewController setViewControllers:viewControllers direction:UIPageViewControllerNavigationDirectionForward animated:YES completion:nil];
    
    self.pageViewController.doubleSided = NO;
    return UIPageViewControllerSpineLocationMin;
}

___VARIABLE_classPrefix:identifier___DataViewController* currentViewController = self.pageViewController.viewControllers[0];
NSArray* viewControllers = nil;

NSUInteger indexOfCurrentViewController = [self.modelController indexOfViewController:currentViewController];
if (indexOfCurrentViewController == 0 || indexOfCurrentViewController % 2 == 0) {
    UIViewController* nextViewController = [self.modelController pageViewController:self.pageViewController viewControllerAfterViewController:currentViewController];
    viewControllers = @[currentViewController, nextViewController];
} else {
    UIViewController* previousViewController = [self.modelController pageViewController:self.pageViewController viewControllerBeforeViewController:currentViewController];
    viewControllers = @[previousViewController, currentViewController];
}
[self.pageViewController setViewControllers:viewControllers direction:UIPageViewControllerNavigationDirectionForward animated:YES completion:nil];


return UIPageViewControllerSpineLocationMid;
</string>
						<key>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:viewDidLoad:setup:inset</key>
						<string>pageViewRect = CGRectInset(pageViewRect, 40.0, 40.0);</string>
					</dict>
					<key>Nodes</key>
					<array>
						<string>___PACKAGENAME___-Info.plist:UIMainStoryboardFile</string>
						<string>Base.lproj/Main.storyboard</string>
					</array>
				</dict>
				<key>iPhone</key>
				<dict>
					<key>Definitions</key>
					<dict>
						<key>Base.lproj/Main.storyboard</key>
						<dict>
							<key>Path</key>
							<string>Main_iPhone.storyboard</string>
						</dict>
						<key>___PACKAGENAME___-Info.plist:UIMainStoryboardFile</key>
						<string>&lt;key&gt;UIMainStoryboardFile&lt;/key&gt;
&lt;string&gt;Main&lt;/string&gt;</string>
						<key>___VARIABLE_classPrefix:identifier___RootViewController.m:implementation:UIPageViewController:content</key>
						<string>UIViewController* currentViewController = self.pageViewController.viewControllers[0];
NSArray* viewControllers = @[currentViewController];
[self.pageViewController setViewControllers:viewControllers direction:UIPageViewControllerNavigationDirectionForward animated:YES completion:nil];

self.pageViewController.doubleSided = NO;
return UIPageViewControllerSpineLocationMin;
</string>
					</dict>
					<key>Nodes</key>
					<array>
						<string>___PACKAGENAME___-Info.plist:UIMainStoryboardFile</string>
						<string>Base.lproj/Main.storyboard</string>
					</array>
				</dict>
			</dict>
		</dict>
	</array>
	<key>SortOrder</key>
	<integer>1</integer>
</dict>
</plist>
